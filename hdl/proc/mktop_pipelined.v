//
// Generated by Bluespec Compiler, version 2023.07 (build 0eb551d)
//
// On Thu Jul  4 08:48:23 EDT 2024
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mktop_pipelined(CLK,
		       RST_N);
  input  CLK;
  input  RST_N;

  // inlined wires
  wire [512 : 0] mem_dl_d_0_rv$port1__read,
		 mem_dl_d_0_rv$port1__write_1,
		 mem_dl_d_0_rv$port2__read,
		 mem_dl_d_10_rv$port1__read,
		 mem_dl_d_10_rv$port1__write_1,
		 mem_dl_d_10_rv$port2__read,
		 mem_dl_d_11_rv$port1__read,
		 mem_dl_d_11_rv$port1__write_1,
		 mem_dl_d_11_rv$port2__read,
		 mem_dl_d_12_rv$port1__read,
		 mem_dl_d_12_rv$port1__write_1,
		 mem_dl_d_12_rv$port2__read,
		 mem_dl_d_13_rv$port1__read,
		 mem_dl_d_13_rv$port1__write_1,
		 mem_dl_d_13_rv$port2__read,
		 mem_dl_d_14_rv$port1__read,
		 mem_dl_d_14_rv$port1__write_1,
		 mem_dl_d_14_rv$port2__read,
		 mem_dl_d_15_rv$port1__read,
		 mem_dl_d_15_rv$port1__write_1,
		 mem_dl_d_15_rv$port2__read,
		 mem_dl_d_16_rv$port1__read,
		 mem_dl_d_16_rv$port1__write_1,
		 mem_dl_d_16_rv$port2__read,
		 mem_dl_d_17_rv$port1__read,
		 mem_dl_d_17_rv$port1__write_1,
		 mem_dl_d_17_rv$port2__read,
		 mem_dl_d_18_rv$port1__read,
		 mem_dl_d_18_rv$port1__write_1,
		 mem_dl_d_18_rv$port2__read,
		 mem_dl_d_19_rv$port1__read,
		 mem_dl_d_19_rv$port1__write_1,
		 mem_dl_d_19_rv$port2__read,
		 mem_dl_d_1_rv$port1__read,
		 mem_dl_d_1_rv$port1__write_1,
		 mem_dl_d_1_rv$port2__read,
		 mem_dl_d_2_rv$port1__read,
		 mem_dl_d_2_rv$port1__write_1,
		 mem_dl_d_2_rv$port2__read,
		 mem_dl_d_3_rv$port1__read,
		 mem_dl_d_3_rv$port1__write_1,
		 mem_dl_d_3_rv$port2__read,
		 mem_dl_d_4_rv$port1__read,
		 mem_dl_d_4_rv$port1__write_1,
		 mem_dl_d_4_rv$port2__read,
		 mem_dl_d_5_rv$port1__read,
		 mem_dl_d_5_rv$port1__write_1,
		 mem_dl_d_5_rv$port2__read,
		 mem_dl_d_6_rv$port1__read,
		 mem_dl_d_6_rv$port1__write_1,
		 mem_dl_d_6_rv$port2__read,
		 mem_dl_d_7_rv$port1__read,
		 mem_dl_d_7_rv$port1__write_1,
		 mem_dl_d_7_rv$port2__read,
		 mem_dl_d_8_rv$port1__read,
		 mem_dl_d_8_rv$port1__write_1,
		 mem_dl_d_8_rv$port2__read,
		 mem_dl_d_9_rv$port1__read,
		 mem_dl_d_9_rv$port1__write_1,
		 mem_dl_d_9_rv$port2__read;
  wire [1 : 0] mem_bram_serverAdapter_s1_1$wget,
	       mem_bram_serverAdapter_writeWithResp$wget;
  wire mem_bram_serverAdapter_cnt_1$whas,
       mem_bram_serverAdapter_outData_dequeueing$whas,
       mem_bram_serverAdapter_outData_enqw$whas,
       mem_bram_serverAdapter_writeWithResp$whas,
       mem_dl_d_0_rv$EN_port0__write,
       mem_dl_d_0_rv$EN_port1__write,
       mem_dl_d_10_rv$EN_port0__write,
       mem_dl_d_10_rv$EN_port1__write,
       mem_dl_d_11_rv$EN_port0__write,
       mem_dl_d_11_rv$EN_port1__write,
       mem_dl_d_12_rv$EN_port0__write,
       mem_dl_d_12_rv$EN_port1__write,
       mem_dl_d_13_rv$EN_port0__write,
       mem_dl_d_13_rv$EN_port1__write,
       mem_dl_d_14_rv$EN_port0__write,
       mem_dl_d_14_rv$EN_port1__write,
       mem_dl_d_15_rv$EN_port0__write,
       mem_dl_d_15_rv$EN_port1__write,
       mem_dl_d_16_rv$EN_port0__write,
       mem_dl_d_16_rv$EN_port1__write,
       mem_dl_d_17_rv$EN_port0__write,
       mem_dl_d_17_rv$EN_port1__write,
       mem_dl_d_18_rv$EN_port0__write,
       mem_dl_d_18_rv$EN_port1__write,
       mem_dl_d_19_rv$EN_port0__write,
       mem_dl_d_19_rv$EN_port1__write,
       mem_dl_d_1_rv$EN_port0__write,
       mem_dl_d_1_rv$EN_port1__write,
       mem_dl_d_2_rv$EN_port0__write,
       mem_dl_d_2_rv$EN_port1__write,
       mem_dl_d_3_rv$EN_port0__write,
       mem_dl_d_3_rv$EN_port1__write,
       mem_dl_d_4_rv$EN_port0__write,
       mem_dl_d_4_rv$EN_port1__write,
       mem_dl_d_5_rv$EN_port0__write,
       mem_dl_d_5_rv$EN_port1__write,
       mem_dl_d_6_rv$EN_port0__write,
       mem_dl_d_6_rv$EN_port1__write,
       mem_dl_d_7_rv$EN_port0__write,
       mem_dl_d_7_rv$EN_port1__write,
       mem_dl_d_8_rv$EN_port0__write,
       mem_dl_d_8_rv$EN_port1__write,
       mem_dl_d_9_rv$EN_port0__write,
       mem_dl_d_9_rv$EN_port1__write;

  // register cycle_count
  reg [31 : 0] cycle_count;
  wire [31 : 0] cycle_count$D_IN;
  wire cycle_count$EN;

  // register mem_bram_serverAdapter_cnt
  reg [2 : 0] mem_bram_serverAdapter_cnt;
  wire [2 : 0] mem_bram_serverAdapter_cnt$D_IN;
  wire mem_bram_serverAdapter_cnt$EN;

  // register mem_bram_serverAdapter_s1
  reg [1 : 0] mem_bram_serverAdapter_s1;
  wire [1 : 0] mem_bram_serverAdapter_s1$D_IN;
  wire mem_bram_serverAdapter_s1$EN;

  // register mem_dl_d_0_rv
  reg [512 : 0] mem_dl_d_0_rv;
  wire [512 : 0] mem_dl_d_0_rv$D_IN;
  wire mem_dl_d_0_rv$EN;

  // register mem_dl_d_10_rv
  reg [512 : 0] mem_dl_d_10_rv;
  wire [512 : 0] mem_dl_d_10_rv$D_IN;
  wire mem_dl_d_10_rv$EN;

  // register mem_dl_d_11_rv
  reg [512 : 0] mem_dl_d_11_rv;
  wire [512 : 0] mem_dl_d_11_rv$D_IN;
  wire mem_dl_d_11_rv$EN;

  // register mem_dl_d_12_rv
  reg [512 : 0] mem_dl_d_12_rv;
  wire [512 : 0] mem_dl_d_12_rv$D_IN;
  wire mem_dl_d_12_rv$EN;

  // register mem_dl_d_13_rv
  reg [512 : 0] mem_dl_d_13_rv;
  wire [512 : 0] mem_dl_d_13_rv$D_IN;
  wire mem_dl_d_13_rv$EN;

  // register mem_dl_d_14_rv
  reg [512 : 0] mem_dl_d_14_rv;
  wire [512 : 0] mem_dl_d_14_rv$D_IN;
  wire mem_dl_d_14_rv$EN;

  // register mem_dl_d_15_rv
  reg [512 : 0] mem_dl_d_15_rv;
  wire [512 : 0] mem_dl_d_15_rv$D_IN;
  wire mem_dl_d_15_rv$EN;

  // register mem_dl_d_16_rv
  reg [512 : 0] mem_dl_d_16_rv;
  wire [512 : 0] mem_dl_d_16_rv$D_IN;
  wire mem_dl_d_16_rv$EN;

  // register mem_dl_d_17_rv
  reg [512 : 0] mem_dl_d_17_rv;
  wire [512 : 0] mem_dl_d_17_rv$D_IN;
  wire mem_dl_d_17_rv$EN;

  // register mem_dl_d_18_rv
  reg [512 : 0] mem_dl_d_18_rv;
  wire [512 : 0] mem_dl_d_18_rv$D_IN;
  wire mem_dl_d_18_rv$EN;

  // register mem_dl_d_19_rv
  reg [512 : 0] mem_dl_d_19_rv;
  wire [512 : 0] mem_dl_d_19_rv$D_IN;
  wire mem_dl_d_19_rv$EN;

  // register mem_dl_d_1_rv
  reg [512 : 0] mem_dl_d_1_rv;
  wire [512 : 0] mem_dl_d_1_rv$D_IN;
  wire mem_dl_d_1_rv$EN;

  // register mem_dl_d_2_rv
  reg [512 : 0] mem_dl_d_2_rv;
  wire [512 : 0] mem_dl_d_2_rv$D_IN;
  wire mem_dl_d_2_rv$EN;

  // register mem_dl_d_3_rv
  reg [512 : 0] mem_dl_d_3_rv;
  wire [512 : 0] mem_dl_d_3_rv$D_IN;
  wire mem_dl_d_3_rv$EN;

  // register mem_dl_d_4_rv
  reg [512 : 0] mem_dl_d_4_rv;
  wire [512 : 0] mem_dl_d_4_rv$D_IN;
  wire mem_dl_d_4_rv$EN;

  // register mem_dl_d_5_rv
  reg [512 : 0] mem_dl_d_5_rv;
  wire [512 : 0] mem_dl_d_5_rv$D_IN;
  wire mem_dl_d_5_rv$EN;

  // register mem_dl_d_6_rv
  reg [512 : 0] mem_dl_d_6_rv;
  wire [512 : 0] mem_dl_d_6_rv$D_IN;
  wire mem_dl_d_6_rv$EN;

  // register mem_dl_d_7_rv
  reg [512 : 0] mem_dl_d_7_rv;
  wire [512 : 0] mem_dl_d_7_rv$D_IN;
  wire mem_dl_d_7_rv$EN;

  // register mem_dl_d_8_rv
  reg [512 : 0] mem_dl_d_8_rv;
  wire [512 : 0] mem_dl_d_8_rv$D_IN;
  wire mem_dl_d_8_rv$EN;

  // register mem_dl_d_9_rv
  reg [512 : 0] mem_dl_d_9_rv;
  wire [512 : 0] mem_dl_d_9_rv$D_IN;
  wire mem_dl_d_9_rv$EN;

  // ports of submodule mem_bram_memory
  wire [511 : 0] mem_bram_memory$DI, mem_bram_memory$DO;
  wire [25 : 0] mem_bram_memory$ADDR;
  wire mem_bram_memory$EN, mem_bram_memory$WE;

  // ports of submodule mem_bram_serverAdapter_outData_beforeDeq
  wire mem_bram_serverAdapter_outData_beforeDeq$D_IN,
       mem_bram_serverAdapter_outData_beforeDeq$EN,
       mem_bram_serverAdapter_outData_beforeDeq$Q_OUT;

  // ports of submodule mem_bram_serverAdapter_outData_beforeEnq
  wire mem_bram_serverAdapter_outData_beforeEnq$D_IN,
       mem_bram_serverAdapter_outData_beforeEnq$EN,
       mem_bram_serverAdapter_outData_beforeEnq$Q_OUT;

  // ports of submodule mem_bram_serverAdapter_outData_ff
  wire [511 : 0] mem_bram_serverAdapter_outData_ff$D_IN,
		 mem_bram_serverAdapter_outData_ff$D_OUT;
  wire mem_bram_serverAdapter_outData_ff$CLR,
       mem_bram_serverAdapter_outData_ff$DEQ,
       mem_bram_serverAdapter_outData_ff$EMPTY_N,
       mem_bram_serverAdapter_outData_ff$ENQ,
       mem_bram_serverAdapter_outData_ff$FULL_N;

  // ports of submodule mmioreq
  wire [67 : 0] mmioreq$D_IN, mmioreq$D_OUT;
  wire mmioreq$CLR, mmioreq$DEQ, mmioreq$EMPTY_N, mmioreq$ENQ, mmioreq$FULL_N;

  // ports of submodule procCore
  wire [538 : 0] procCore$getMReq;
  wire [511 : 0] procCore$putMResp_data;
  wire [67 : 0] procCore$getMMIOReq, procCore$putMMIOResp_data;
  wire procCore$EN_getMMIOReq,
       procCore$EN_getMReq,
       procCore$EN_putMMIOResp,
       procCore$EN_putMResp,
       procCore$RDY_getMMIOReq,
       procCore$RDY_getMReq,
       procCore$RDY_putMMIOResp,
       procCore$RDY_putMResp;

  // rule scheduling signals
  wire WILL_FIRE_RL_requestMMIO;

  // remaining internal signals
  wire [2 : 0] mem_bram_serverAdapter_cnt_6_PLUS_IF_mem_bram__ETC___d22;

  // submodule mem_bram_memory
  BRAM1Load #(.FILENAME("memlines.vmh"),
	      .PIPELINED(1'd0),
	      .ADDR_WIDTH(32'd26),
	      .DATA_WIDTH(32'd512),
	      .MEMSIZE(27'd67108864),
	      .BINARY(1'd0)) mem_bram_memory(.CLK(CLK),
					     .ADDR(mem_bram_memory$ADDR),
					     .DI(mem_bram_memory$DI),
					     .WE(mem_bram_memory$WE),
					     .EN(mem_bram_memory$EN),
					     .DO(mem_bram_memory$DO));

  // submodule mem_bram_serverAdapter_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mem_bram_serverAdapter_outData_beforeDeq(.CLK(CLK),
								    .D_IN(mem_bram_serverAdapter_outData_beforeDeq$D_IN),
								    .EN(mem_bram_serverAdapter_outData_beforeDeq$EN),
								    .Q_OUT(mem_bram_serverAdapter_outData_beforeDeq$Q_OUT));

  // submodule mem_bram_serverAdapter_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) mem_bram_serverAdapter_outData_beforeEnq(.CLK(CLK),
								    .D_IN(mem_bram_serverAdapter_outData_beforeEnq$D_IN),
								    .EN(mem_bram_serverAdapter_outData_beforeEnq$EN),
								    .Q_OUT(mem_bram_serverAdapter_outData_beforeEnq$Q_OUT));

  // submodule mem_bram_serverAdapter_outData_ff
  SizedFIFO #(.p1width(32'd512),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd0)) mem_bram_serverAdapter_outData_ff(.RST(RST_N),
								.CLK(CLK),
								.D_IN(mem_bram_serverAdapter_outData_ff$D_IN),
								.ENQ(mem_bram_serverAdapter_outData_ff$ENQ),
								.DEQ(mem_bram_serverAdapter_outData_ff$DEQ),
								.CLR(mem_bram_serverAdapter_outData_ff$CLR),
								.D_OUT(mem_bram_serverAdapter_outData_ff$D_OUT),
								.FULL_N(mem_bram_serverAdapter_outData_ff$FULL_N),
								.EMPTY_N(mem_bram_serverAdapter_outData_ff$EMPTY_N));

  // submodule mmioreq
  FIFO2 #(.width(32'd68), .guarded(1'd1)) mmioreq(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(mmioreq$D_IN),
						  .ENQ(mmioreq$ENQ),
						  .DEQ(mmioreq$DEQ),
						  .CLR(mmioreq$CLR),
						  .D_OUT(mmioreq$D_OUT),
						  .FULL_N(mmioreq$FULL_N),
						  .EMPTY_N(mmioreq$EMPTY_N));

  // submodule procCore
  mkProcCore procCore(.CLK(CLK),
		      .RST_N(RST_N),
		      .putMMIOResp_data(procCore$putMMIOResp_data),
		      .putMResp_data(procCore$putMResp_data),
		      .EN_getMReq(procCore$EN_getMReq),
		      .EN_putMResp(procCore$EN_putMResp),
		      .EN_getMMIOReq(procCore$EN_getMMIOReq),
		      .EN_putMMIOResp(procCore$EN_putMMIOResp),
		      .getMReq(procCore$getMReq),
		      .RDY_getMReq(procCore$RDY_getMReq),
		      .RDY_putMResp(procCore$RDY_putMResp),
		      .getMMIOReq(procCore$getMMIOReq),
		      .RDY_getMMIOReq(procCore$RDY_getMMIOReq),
		      .RDY_putMMIOResp(procCore$RDY_putMMIOResp),
		      .debug_pc(),
		      .RDY_getPC(),
		      .debug_epoch(),
		      .RDY_getEpoch());

  // rule RL_requestMMIO
  assign WILL_FIRE_RL_requestMMIO =
	     procCore$RDY_getMMIOReq && mmioreq$FULL_N ;

  // inlined wires
  assign mem_bram_serverAdapter_outData_enqw$whas =
	     (!mem_bram_serverAdapter_s1[0] ||
	      mem_bram_serverAdapter_outData_ff$FULL_N) &&
	     mem_bram_serverAdapter_s1[1] &&
	     mem_bram_serverAdapter_s1[0] ;
  assign mem_bram_serverAdapter_cnt_1$whas =
	     procCore$RDY_getMReq &&
	     (mem_bram_serverAdapter_cnt ^ 3'h4) < 3'd7 &&
	     (!mem_bram_serverAdapter_writeWithResp$wget[1] ||
	      mem_bram_serverAdapter_writeWithResp$wget[0]) ;
  assign mem_bram_serverAdapter_writeWithResp$wget =
	     { procCore$getMReq[538], 1'd0 } ;
  assign mem_bram_serverAdapter_writeWithResp$whas =
	     procCore$RDY_getMReq &&
	     (mem_bram_serverAdapter_cnt ^ 3'h4) < 3'd7 ;
  assign mem_bram_serverAdapter_s1_1$wget =
	     { 1'd1,
	       !mem_bram_serverAdapter_writeWithResp$wget[1] ||
	       mem_bram_serverAdapter_writeWithResp$wget[0] } ;
  assign mem_bram_serverAdapter_outData_dequeueing$whas =
	     mem_bram_serverAdapter_outData_beforeDeq$Q_OUT &&
	     (mem_bram_serverAdapter_outData_ff$EMPTY_N ||
	      mem_bram_serverAdapter_outData_enqw$whas) &&
	     !mem_dl_d_0_rv$port1__read[512] ;
  assign mem_dl_d_0_rv$EN_port0__write =
	     mem_dl_d_0_rv[512] && !mem_dl_d_1_rv$port1__read[512] ;
  assign mem_dl_d_0_rv$port1__read =
	     mem_dl_d_0_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_0_rv ;
  assign mem_dl_d_0_rv$EN_port1__write =
	     mem_bram_serverAdapter_outData_beforeDeq$Q_OUT &&
	     (mem_bram_serverAdapter_outData_ff$EMPTY_N ||
	      mem_bram_serverAdapter_outData_enqw$whas) &&
	     !mem_dl_d_0_rv$port1__read[512] ;
  assign mem_dl_d_0_rv$port1__write_1 =
	     { 1'd1,
	       mem_bram_serverAdapter_outData_ff$EMPTY_N ?
		 mem_bram_serverAdapter_outData_ff$D_OUT :
		 mem_bram_memory$DO } ;
  assign mem_dl_d_0_rv$port2__read =
	     mem_dl_d_0_rv$EN_port1__write ?
	       mem_dl_d_0_rv$port1__write_1 :
	       mem_dl_d_0_rv$port1__read ;
  assign mem_dl_d_1_rv$EN_port0__write =
	     mem_dl_d_1_rv[512] && !mem_dl_d_2_rv$port1__read[512] ;
  assign mem_dl_d_1_rv$port1__read =
	     mem_dl_d_1_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_1_rv ;
  assign mem_dl_d_1_rv$EN_port1__write =
	     mem_dl_d_0_rv[512] && !mem_dl_d_1_rv$port1__read[512] ;
  assign mem_dl_d_1_rv$port1__write_1 = { 1'd1, mem_dl_d_0_rv[511:0] } ;
  assign mem_dl_d_1_rv$port2__read =
	     mem_dl_d_1_rv$EN_port1__write ?
	       mem_dl_d_1_rv$port1__write_1 :
	       mem_dl_d_1_rv$port1__read ;
  assign mem_dl_d_2_rv$EN_port0__write =
	     mem_dl_d_2_rv[512] && !mem_dl_d_3_rv$port1__read[512] ;
  assign mem_dl_d_2_rv$port1__read =
	     mem_dl_d_2_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_2_rv ;
  assign mem_dl_d_2_rv$EN_port1__write =
	     mem_dl_d_1_rv[512] && !mem_dl_d_2_rv$port1__read[512] ;
  assign mem_dl_d_2_rv$port1__write_1 = { 1'd1, mem_dl_d_1_rv[511:0] } ;
  assign mem_dl_d_2_rv$port2__read =
	     mem_dl_d_2_rv$EN_port1__write ?
	       mem_dl_d_2_rv$port1__write_1 :
	       mem_dl_d_2_rv$port1__read ;
  assign mem_dl_d_3_rv$EN_port0__write =
	     mem_dl_d_3_rv[512] && !mem_dl_d_4_rv$port1__read[512] ;
  assign mem_dl_d_3_rv$port1__read =
	     mem_dl_d_3_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_3_rv ;
  assign mem_dl_d_3_rv$EN_port1__write =
	     mem_dl_d_2_rv[512] && !mem_dl_d_3_rv$port1__read[512] ;
  assign mem_dl_d_3_rv$port1__write_1 = { 1'd1, mem_dl_d_2_rv[511:0] } ;
  assign mem_dl_d_3_rv$port2__read =
	     mem_dl_d_3_rv$EN_port1__write ?
	       mem_dl_d_3_rv$port1__write_1 :
	       mem_dl_d_3_rv$port1__read ;
  assign mem_dl_d_4_rv$EN_port0__write =
	     mem_dl_d_4_rv[512] && !mem_dl_d_5_rv$port1__read[512] ;
  assign mem_dl_d_4_rv$port1__read =
	     mem_dl_d_4_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_4_rv ;
  assign mem_dl_d_4_rv$EN_port1__write =
	     mem_dl_d_3_rv[512] && !mem_dl_d_4_rv$port1__read[512] ;
  assign mem_dl_d_4_rv$port1__write_1 = { 1'd1, mem_dl_d_3_rv[511:0] } ;
  assign mem_dl_d_4_rv$port2__read =
	     mem_dl_d_4_rv$EN_port1__write ?
	       mem_dl_d_4_rv$port1__write_1 :
	       mem_dl_d_4_rv$port1__read ;
  assign mem_dl_d_5_rv$EN_port0__write =
	     mem_dl_d_5_rv[512] && !mem_dl_d_6_rv$port1__read[512] ;
  assign mem_dl_d_5_rv$port1__read =
	     mem_dl_d_5_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_5_rv ;
  assign mem_dl_d_5_rv$EN_port1__write =
	     mem_dl_d_4_rv[512] && !mem_dl_d_5_rv$port1__read[512] ;
  assign mem_dl_d_5_rv$port1__write_1 = { 1'd1, mem_dl_d_4_rv[511:0] } ;
  assign mem_dl_d_5_rv$port2__read =
	     mem_dl_d_5_rv$EN_port1__write ?
	       mem_dl_d_5_rv$port1__write_1 :
	       mem_dl_d_5_rv$port1__read ;
  assign mem_dl_d_6_rv$EN_port0__write =
	     mem_dl_d_6_rv[512] && !mem_dl_d_7_rv$port1__read[512] ;
  assign mem_dl_d_6_rv$port1__read =
	     mem_dl_d_6_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_6_rv ;
  assign mem_dl_d_6_rv$EN_port1__write =
	     mem_dl_d_5_rv[512] && !mem_dl_d_6_rv$port1__read[512] ;
  assign mem_dl_d_6_rv$port1__write_1 = { 1'd1, mem_dl_d_5_rv[511:0] } ;
  assign mem_dl_d_6_rv$port2__read =
	     mem_dl_d_6_rv$EN_port1__write ?
	       mem_dl_d_6_rv$port1__write_1 :
	       mem_dl_d_6_rv$port1__read ;
  assign mem_dl_d_7_rv$EN_port0__write =
	     mem_dl_d_7_rv[512] && !mem_dl_d_8_rv$port1__read[512] ;
  assign mem_dl_d_7_rv$port1__read =
	     mem_dl_d_7_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_7_rv ;
  assign mem_dl_d_7_rv$EN_port1__write =
	     mem_dl_d_6_rv[512] && !mem_dl_d_7_rv$port1__read[512] ;
  assign mem_dl_d_7_rv$port1__write_1 = { 1'd1, mem_dl_d_6_rv[511:0] } ;
  assign mem_dl_d_7_rv$port2__read =
	     mem_dl_d_7_rv$EN_port1__write ?
	       mem_dl_d_7_rv$port1__write_1 :
	       mem_dl_d_7_rv$port1__read ;
  assign mem_dl_d_8_rv$EN_port0__write =
	     mem_dl_d_8_rv[512] && !mem_dl_d_9_rv$port1__read[512] ;
  assign mem_dl_d_8_rv$port1__read =
	     mem_dl_d_8_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_8_rv ;
  assign mem_dl_d_8_rv$EN_port1__write =
	     mem_dl_d_7_rv[512] && !mem_dl_d_8_rv$port1__read[512] ;
  assign mem_dl_d_8_rv$port1__write_1 = { 1'd1, mem_dl_d_7_rv[511:0] } ;
  assign mem_dl_d_8_rv$port2__read =
	     mem_dl_d_8_rv$EN_port1__write ?
	       mem_dl_d_8_rv$port1__write_1 :
	       mem_dl_d_8_rv$port1__read ;
  assign mem_dl_d_9_rv$EN_port0__write =
	     mem_dl_d_9_rv[512] && !mem_dl_d_10_rv$port1__read[512] ;
  assign mem_dl_d_9_rv$port1__read =
	     mem_dl_d_9_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_9_rv ;
  assign mem_dl_d_9_rv$EN_port1__write =
	     mem_dl_d_8_rv[512] && !mem_dl_d_9_rv$port1__read[512] ;
  assign mem_dl_d_9_rv$port1__write_1 = { 1'd1, mem_dl_d_8_rv[511:0] } ;
  assign mem_dl_d_9_rv$port2__read =
	     mem_dl_d_9_rv$EN_port1__write ?
	       mem_dl_d_9_rv$port1__write_1 :
	       mem_dl_d_9_rv$port1__read ;
  assign mem_dl_d_10_rv$EN_port0__write =
	     mem_dl_d_10_rv[512] && !mem_dl_d_11_rv$port1__read[512] ;
  assign mem_dl_d_10_rv$port1__read =
	     mem_dl_d_10_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_10_rv ;
  assign mem_dl_d_10_rv$EN_port1__write =
	     mem_dl_d_9_rv[512] && !mem_dl_d_10_rv$port1__read[512] ;
  assign mem_dl_d_10_rv$port1__write_1 = { 1'd1, mem_dl_d_9_rv[511:0] } ;
  assign mem_dl_d_10_rv$port2__read =
	     mem_dl_d_10_rv$EN_port1__write ?
	       mem_dl_d_10_rv$port1__write_1 :
	       mem_dl_d_10_rv$port1__read ;
  assign mem_dl_d_11_rv$EN_port0__write =
	     mem_dl_d_11_rv[512] && !mem_dl_d_12_rv$port1__read[512] ;
  assign mem_dl_d_11_rv$port1__read =
	     mem_dl_d_11_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_11_rv ;
  assign mem_dl_d_11_rv$EN_port1__write =
	     mem_dl_d_10_rv[512] && !mem_dl_d_11_rv$port1__read[512] ;
  assign mem_dl_d_11_rv$port1__write_1 = { 1'd1, mem_dl_d_10_rv[511:0] } ;
  assign mem_dl_d_11_rv$port2__read =
	     mem_dl_d_11_rv$EN_port1__write ?
	       mem_dl_d_11_rv$port1__write_1 :
	       mem_dl_d_11_rv$port1__read ;
  assign mem_dl_d_12_rv$EN_port0__write =
	     mem_dl_d_12_rv[512] && !mem_dl_d_13_rv$port1__read[512] ;
  assign mem_dl_d_12_rv$port1__read =
	     mem_dl_d_12_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_12_rv ;
  assign mem_dl_d_12_rv$EN_port1__write =
	     mem_dl_d_11_rv[512] && !mem_dl_d_12_rv$port1__read[512] ;
  assign mem_dl_d_12_rv$port1__write_1 = { 1'd1, mem_dl_d_11_rv[511:0] } ;
  assign mem_dl_d_12_rv$port2__read =
	     mem_dl_d_12_rv$EN_port1__write ?
	       mem_dl_d_12_rv$port1__write_1 :
	       mem_dl_d_12_rv$port1__read ;
  assign mem_dl_d_13_rv$EN_port0__write =
	     mem_dl_d_13_rv[512] && !mem_dl_d_14_rv$port1__read[512] ;
  assign mem_dl_d_13_rv$port1__read =
	     mem_dl_d_13_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_13_rv ;
  assign mem_dl_d_13_rv$EN_port1__write =
	     mem_dl_d_12_rv[512] && !mem_dl_d_13_rv$port1__read[512] ;
  assign mem_dl_d_13_rv$port1__write_1 = { 1'd1, mem_dl_d_12_rv[511:0] } ;
  assign mem_dl_d_13_rv$port2__read =
	     mem_dl_d_13_rv$EN_port1__write ?
	       mem_dl_d_13_rv$port1__write_1 :
	       mem_dl_d_13_rv$port1__read ;
  assign mem_dl_d_14_rv$EN_port0__write =
	     mem_dl_d_14_rv[512] && !mem_dl_d_15_rv$port1__read[512] ;
  assign mem_dl_d_14_rv$port1__read =
	     mem_dl_d_14_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_14_rv ;
  assign mem_dl_d_14_rv$EN_port1__write =
	     mem_dl_d_13_rv[512] && !mem_dl_d_14_rv$port1__read[512] ;
  assign mem_dl_d_14_rv$port1__write_1 = { 1'd1, mem_dl_d_13_rv[511:0] } ;
  assign mem_dl_d_14_rv$port2__read =
	     mem_dl_d_14_rv$EN_port1__write ?
	       mem_dl_d_14_rv$port1__write_1 :
	       mem_dl_d_14_rv$port1__read ;
  assign mem_dl_d_15_rv$EN_port0__write =
	     mem_dl_d_15_rv[512] && !mem_dl_d_16_rv$port1__read[512] ;
  assign mem_dl_d_15_rv$port1__read =
	     mem_dl_d_15_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_15_rv ;
  assign mem_dl_d_15_rv$EN_port1__write =
	     mem_dl_d_14_rv[512] && !mem_dl_d_15_rv$port1__read[512] ;
  assign mem_dl_d_15_rv$port1__write_1 = { 1'd1, mem_dl_d_14_rv[511:0] } ;
  assign mem_dl_d_15_rv$port2__read =
	     mem_dl_d_15_rv$EN_port1__write ?
	       mem_dl_d_15_rv$port1__write_1 :
	       mem_dl_d_15_rv$port1__read ;
  assign mem_dl_d_16_rv$EN_port0__write =
	     mem_dl_d_16_rv[512] && !mem_dl_d_17_rv$port1__read[512] ;
  assign mem_dl_d_16_rv$port1__read =
	     mem_dl_d_16_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_16_rv ;
  assign mem_dl_d_16_rv$EN_port1__write =
	     mem_dl_d_15_rv[512] && !mem_dl_d_16_rv$port1__read[512] ;
  assign mem_dl_d_16_rv$port1__write_1 = { 1'd1, mem_dl_d_15_rv[511:0] } ;
  assign mem_dl_d_16_rv$port2__read =
	     mem_dl_d_16_rv$EN_port1__write ?
	       mem_dl_d_16_rv$port1__write_1 :
	       mem_dl_d_16_rv$port1__read ;
  assign mem_dl_d_17_rv$EN_port0__write =
	     mem_dl_d_17_rv[512] && !mem_dl_d_18_rv$port1__read[512] ;
  assign mem_dl_d_17_rv$port1__read =
	     mem_dl_d_17_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_17_rv ;
  assign mem_dl_d_17_rv$EN_port1__write =
	     mem_dl_d_16_rv[512] && !mem_dl_d_17_rv$port1__read[512] ;
  assign mem_dl_d_17_rv$port1__write_1 = { 1'd1, mem_dl_d_16_rv[511:0] } ;
  assign mem_dl_d_17_rv$port2__read =
	     mem_dl_d_17_rv$EN_port1__write ?
	       mem_dl_d_17_rv$port1__write_1 :
	       mem_dl_d_17_rv$port1__read ;
  assign mem_dl_d_18_rv$EN_port0__write =
	     mem_dl_d_18_rv[512] && !mem_dl_d_19_rv$port1__read[512] ;
  assign mem_dl_d_18_rv$port1__read =
	     mem_dl_d_18_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_18_rv ;
  assign mem_dl_d_18_rv$EN_port1__write =
	     mem_dl_d_17_rv[512] && !mem_dl_d_18_rv$port1__read[512] ;
  assign mem_dl_d_18_rv$port1__write_1 = { 1'd1, mem_dl_d_17_rv[511:0] } ;
  assign mem_dl_d_18_rv$port2__read =
	     mem_dl_d_18_rv$EN_port1__write ?
	       mem_dl_d_18_rv$port1__write_1 :
	       mem_dl_d_18_rv$port1__read ;
  assign mem_dl_d_19_rv$EN_port0__write =
	     mem_dl_d_19_rv[512] && procCore$RDY_putMResp ;
  assign mem_dl_d_19_rv$port1__read =
	     mem_dl_d_19_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mem_dl_d_19_rv ;
  assign mem_dl_d_19_rv$EN_port1__write =
	     mem_dl_d_18_rv[512] && !mem_dl_d_19_rv$port1__read[512] ;
  assign mem_dl_d_19_rv$port1__write_1 = { 1'd1, mem_dl_d_18_rv[511:0] } ;
  assign mem_dl_d_19_rv$port2__read =
	     mem_dl_d_19_rv$EN_port1__write ?
	       mem_dl_d_19_rv$port1__write_1 :
	       mem_dl_d_19_rv$port1__read ;

  // register cycle_count
  assign cycle_count$D_IN = cycle_count + 32'd1 ;
  assign cycle_count$EN = 1'd1 ;

  // register mem_bram_serverAdapter_cnt
  assign mem_bram_serverAdapter_cnt$D_IN =
	     mem_bram_serverAdapter_cnt_6_PLUS_IF_mem_bram__ETC___d22 ;
  assign mem_bram_serverAdapter_cnt$EN =
	     mem_bram_serverAdapter_cnt_1$whas ||
	     mem_bram_serverAdapter_outData_dequeueing$whas ;

  // register mem_bram_serverAdapter_s1
  assign mem_bram_serverAdapter_s1$D_IN =
	     mem_bram_serverAdapter_writeWithResp$whas ?
	       mem_bram_serverAdapter_s1_1$wget :
	       2'd0 ;
  assign mem_bram_serverAdapter_s1$EN = 1'd1 ;

  // register mem_dl_d_0_rv
  assign mem_dl_d_0_rv$D_IN = mem_dl_d_0_rv$port2__read ;
  assign mem_dl_d_0_rv$EN = 1'b1 ;

  // register mem_dl_d_10_rv
  assign mem_dl_d_10_rv$D_IN = mem_dl_d_10_rv$port2__read ;
  assign mem_dl_d_10_rv$EN = 1'b1 ;

  // register mem_dl_d_11_rv
  assign mem_dl_d_11_rv$D_IN = mem_dl_d_11_rv$port2__read ;
  assign mem_dl_d_11_rv$EN = 1'b1 ;

  // register mem_dl_d_12_rv
  assign mem_dl_d_12_rv$D_IN = mem_dl_d_12_rv$port2__read ;
  assign mem_dl_d_12_rv$EN = 1'b1 ;

  // register mem_dl_d_13_rv
  assign mem_dl_d_13_rv$D_IN = mem_dl_d_13_rv$port2__read ;
  assign mem_dl_d_13_rv$EN = 1'b1 ;

  // register mem_dl_d_14_rv
  assign mem_dl_d_14_rv$D_IN = mem_dl_d_14_rv$port2__read ;
  assign mem_dl_d_14_rv$EN = 1'b1 ;

  // register mem_dl_d_15_rv
  assign mem_dl_d_15_rv$D_IN = mem_dl_d_15_rv$port2__read ;
  assign mem_dl_d_15_rv$EN = 1'b1 ;

  // register mem_dl_d_16_rv
  assign mem_dl_d_16_rv$D_IN = mem_dl_d_16_rv$port2__read ;
  assign mem_dl_d_16_rv$EN = 1'b1 ;

  // register mem_dl_d_17_rv
  assign mem_dl_d_17_rv$D_IN = mem_dl_d_17_rv$port2__read ;
  assign mem_dl_d_17_rv$EN = 1'b1 ;

  // register mem_dl_d_18_rv
  assign mem_dl_d_18_rv$D_IN = mem_dl_d_18_rv$port2__read ;
  assign mem_dl_d_18_rv$EN = 1'b1 ;

  // register mem_dl_d_19_rv
  assign mem_dl_d_19_rv$D_IN = mem_dl_d_19_rv$port2__read ;
  assign mem_dl_d_19_rv$EN = 1'b1 ;

  // register mem_dl_d_1_rv
  assign mem_dl_d_1_rv$D_IN = mem_dl_d_1_rv$port2__read ;
  assign mem_dl_d_1_rv$EN = 1'b1 ;

  // register mem_dl_d_2_rv
  assign mem_dl_d_2_rv$D_IN = mem_dl_d_2_rv$port2__read ;
  assign mem_dl_d_2_rv$EN = 1'b1 ;

  // register mem_dl_d_3_rv
  assign mem_dl_d_3_rv$D_IN = mem_dl_d_3_rv$port2__read ;
  assign mem_dl_d_3_rv$EN = 1'b1 ;

  // register mem_dl_d_4_rv
  assign mem_dl_d_4_rv$D_IN = mem_dl_d_4_rv$port2__read ;
  assign mem_dl_d_4_rv$EN = 1'b1 ;

  // register mem_dl_d_5_rv
  assign mem_dl_d_5_rv$D_IN = mem_dl_d_5_rv$port2__read ;
  assign mem_dl_d_5_rv$EN = 1'b1 ;

  // register mem_dl_d_6_rv
  assign mem_dl_d_6_rv$D_IN = mem_dl_d_6_rv$port2__read ;
  assign mem_dl_d_6_rv$EN = 1'b1 ;

  // register mem_dl_d_7_rv
  assign mem_dl_d_7_rv$D_IN = mem_dl_d_7_rv$port2__read ;
  assign mem_dl_d_7_rv$EN = 1'b1 ;

  // register mem_dl_d_8_rv
  assign mem_dl_d_8_rv$D_IN = mem_dl_d_8_rv$port2__read ;
  assign mem_dl_d_8_rv$EN = 1'b1 ;

  // register mem_dl_d_9_rv
  assign mem_dl_d_9_rv$D_IN = mem_dl_d_9_rv$port2__read ;
  assign mem_dl_d_9_rv$EN = 1'b1 ;

  // submodule mem_bram_memory
  assign mem_bram_memory$ADDR = procCore$getMReq[537:512] ;
  assign mem_bram_memory$DI = procCore$getMReq[511:0] ;
  assign mem_bram_memory$WE = procCore$getMReq[538] ;
  assign mem_bram_memory$EN = mem_bram_serverAdapter_writeWithResp$whas ;

  // submodule mem_bram_serverAdapter_outData_beforeDeq
  assign mem_bram_serverAdapter_outData_beforeDeq$D_IN = 1'd1 ;
  assign mem_bram_serverAdapter_outData_beforeDeq$EN =
	     mem_bram_serverAdapter_outData_dequeueing$whas ;

  // submodule mem_bram_serverAdapter_outData_beforeEnq
  assign mem_bram_serverAdapter_outData_beforeEnq$D_IN = 1'd1 ;
  assign mem_bram_serverAdapter_outData_beforeEnq$EN =
	     mem_bram_serverAdapter_outData_enqw$whas ;

  // submodule mem_bram_serverAdapter_outData_ff
  assign mem_bram_serverAdapter_outData_ff$D_IN = mem_bram_memory$DO ;
  assign mem_bram_serverAdapter_outData_ff$ENQ =
	     mem_bram_serverAdapter_outData_enqw$whas &&
	     (!mem_bram_serverAdapter_outData_dequeueing$whas ||
	      mem_bram_serverAdapter_outData_ff$EMPTY_N) ;
  assign mem_bram_serverAdapter_outData_ff$DEQ =
	     mem_bram_serverAdapter_outData_dequeueing$whas &&
	     mem_bram_serverAdapter_outData_ff$EMPTY_N ;
  assign mem_bram_serverAdapter_outData_ff$CLR = 1'b0 ;

  // submodule mmioreq
  assign mmioreq$D_IN = procCore$getMMIOReq ;
  assign mmioreq$ENQ = WILL_FIRE_RL_requestMMIO ;
  assign mmioreq$DEQ = procCore$RDY_putMMIOResp && mmioreq$EMPTY_N ;
  assign mmioreq$CLR = 1'b0 ;

  // submodule procCore
  assign procCore$putMMIOResp_data = mmioreq$D_OUT ;
  assign procCore$putMResp_data = mem_dl_d_19_rv[511:0] ;
  assign procCore$EN_getMReq =
	     procCore$RDY_getMReq &&
	     (mem_bram_serverAdapter_cnt ^ 3'h4) < 3'd7 ;
  assign procCore$EN_putMResp = mem_dl_d_19_rv[512] && procCore$RDY_putMResp ;
  assign procCore$EN_getMMIOReq = WILL_FIRE_RL_requestMMIO ;
  assign procCore$EN_putMMIOResp =
	     procCore$RDY_putMMIOResp && mmioreq$EMPTY_N ;

  // remaining internal signals
  assign mem_bram_serverAdapter_cnt_6_PLUS_IF_mem_bram__ETC___d22 =
	     mem_bram_serverAdapter_cnt +
	     (mem_bram_serverAdapter_cnt_1$whas ? 3'd1 : 3'd0) +
	     (mem_bram_serverAdapter_outData_dequeueing$whas ? 3'd7 : 3'd0) ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cycle_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	mem_bram_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	mem_bram_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	mem_dl_d_0_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_10_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_11_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_12_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_13_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_14_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_15_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_16_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_17_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_18_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_19_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_1_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_2_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_3_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_4_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_5_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_6_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_7_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_8_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mem_dl_d_9_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      end
    else
      begin
        if (cycle_count$EN)
	  cycle_count <= `BSV_ASSIGNMENT_DELAY cycle_count$D_IN;
	if (mem_bram_serverAdapter_cnt$EN)
	  mem_bram_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY
	      mem_bram_serverAdapter_cnt$D_IN;
	if (mem_bram_serverAdapter_s1$EN)
	  mem_bram_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY
	      mem_bram_serverAdapter_s1$D_IN;
	if (mem_dl_d_0_rv$EN)
	  mem_dl_d_0_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_0_rv$D_IN;
	if (mem_dl_d_10_rv$EN)
	  mem_dl_d_10_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_10_rv$D_IN;
	if (mem_dl_d_11_rv$EN)
	  mem_dl_d_11_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_11_rv$D_IN;
	if (mem_dl_d_12_rv$EN)
	  mem_dl_d_12_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_12_rv$D_IN;
	if (mem_dl_d_13_rv$EN)
	  mem_dl_d_13_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_13_rv$D_IN;
	if (mem_dl_d_14_rv$EN)
	  mem_dl_d_14_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_14_rv$D_IN;
	if (mem_dl_d_15_rv$EN)
	  mem_dl_d_15_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_15_rv$D_IN;
	if (mem_dl_d_16_rv$EN)
	  mem_dl_d_16_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_16_rv$D_IN;
	if (mem_dl_d_17_rv$EN)
	  mem_dl_d_17_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_17_rv$D_IN;
	if (mem_dl_d_18_rv$EN)
	  mem_dl_d_18_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_18_rv$D_IN;
	if (mem_dl_d_19_rv$EN)
	  mem_dl_d_19_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_19_rv$D_IN;
	if (mem_dl_d_1_rv$EN)
	  mem_dl_d_1_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_1_rv$D_IN;
	if (mem_dl_d_2_rv$EN)
	  mem_dl_d_2_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_2_rv$D_IN;
	if (mem_dl_d_3_rv$EN)
	  mem_dl_d_3_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_3_rv$D_IN;
	if (mem_dl_d_4_rv$EN)
	  mem_dl_d_4_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_4_rv$D_IN;
	if (mem_dl_d_5_rv$EN)
	  mem_dl_d_5_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_5_rv$D_IN;
	if (mem_dl_d_6_rv$EN)
	  mem_dl_d_6_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_6_rv$D_IN;
	if (mem_dl_d_7_rv$EN)
	  mem_dl_d_7_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_7_rv$D_IN;
	if (mem_dl_d_8_rv$EN)
	  mem_dl_d_8_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_8_rv$D_IN;
	if (mem_dl_d_9_rv$EN)
	  mem_dl_d_9_rv <= `BSV_ASSIGNMENT_DELAY mem_dl_d_9_rv$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cycle_count = 32'hAAAAAAAA;
    mem_bram_serverAdapter_cnt = 3'h2;
    mem_bram_serverAdapter_s1 = 2'h2;
    mem_dl_d_0_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_10_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_11_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_12_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_13_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_14_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_15_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_16_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_17_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_18_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_19_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_1_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_2_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_3_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_4_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_5_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_6_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_7_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_8_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mem_dl_d_9_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE) if (cycle_count == 32'd0) $dumpvars;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO && procCore$getMMIOReq[67:64] == 4'hF &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF4)
	$fwrite(32'h80000002, "%016x", procCore$getMMIOReq[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO && procCore$getMMIOReq[67:64] == 4'hF &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF4)
	$fflush(32'h80000002);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF0)
	$fwrite(32'h80000002, "%c", procCore$getMMIOReq[7:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF0)
	$fflush(32'h80000002);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF8)
	$display("RAN CYCLES", cycle_count);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF8 &&
	  procCore$getMMIOReq[31:0] == 32'd0)
	$fdisplay(32'h80000002, "  \033[0;32mPASS\033[0m");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF8 &&
	  procCore$getMMIOReq[31:0] != 32'd0)
	$fdisplay(32'h80000002,
		  "  \033[0;31mFAIL\033[0m (%0d)",
		  procCore$getMMIOReq[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF8)
	$fflush(32'h80000002);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_requestMMIO &&
	  procCore$getMMIOReq[63:32] == 32'h0000FFF8)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (mem_bram_serverAdapter_s1[1] &&
	  (!mem_bram_serverAdapter_outData_beforeEnq$Q_OUT ||
	   !mem_bram_serverAdapter_outData_beforeDeq$Q_OUT ||
	   !mem_bram_serverAdapter_outData_ff$FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
  end
  // synopsys translate_on
endmodule  // mktop_pipelined

